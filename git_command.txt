初始化一个仓库：git init

添加文件到Git仓库，分两步：
	第一步：使用命令 git add <file> ,注意：可以反复多次使用，添加多个文件，也可以一次添加多个文件			示例：git add file1
			 git add file2 file3
	第二步：使用命令 git commit      注意：最好使用 -m 参数，添加此次提交的解释说明

	注意：提交文件的修改也是通过这两步

查看仓库的当前状态：git status     注意：要经常使用该命令，掌握工作区的状态

查看文件变更的内容：git diff <file>   

查看commit历史记录：git log    注意：想版本回退的时候这个命令很又用，可以看到commit_id,
		    git log --pretty=oneline  注意:每个commit只显示一行数据 commit_id和提交说明		

版本控制/选择：git reset --hard HEAD^/commit_id
	 注意：在Git中，HEAD表示当前版本 HEAD^表示上个版本 HEAD^^表示上上个版本，依次类推。
	       如果回退的太多，可以使用 HEAD~100来表示倒数第100个版本
	       数数太麻烦？咱不用 HEAD^ ,咱用commit_id,就是git log命令显示出的一大串字符数字
	       取前几位就可以了，不用都写，只要能代表一个唯一的版本就可以

查看git命令的历史记录：git reflog
		 注意：显示你以前执行的所有git命令，
		       当你执行了版本回退后，git log命令无法再显示该版本之后的版本信息，
			如果你后悔这次回退，可以通过执行该命令查看你执行回退时的git命令
			并对应相应的commit_id 

撤销修改：git checkout -- file
		 注意：--很重要，没有这个就变成了其他命令，该命令只能撤销工作区的修改，就是还未
			 add的修改
	  git reset HEAD file : 回退暂存区的修改到工作区，HEAD代表最新版本
	  git checkout -- file：撤销工作区的修改
		 注意：当你的修改已经提交到暂存区，就是add了之后，顺序执行这两个命令来撤销修改

文件删除：git rm file    注意：删除本地的文件
			       如果你是手动删除了本地的文件，可以通过git checkout -- file 命令恢复
			       如果是通过该命令删除，则需要通过版本回退来找回删除的文件



关联远程库：git remote add origin git@server-name:path/repo-name.git

关联后推送：git push -u origin master    注意：第一次推送master分支的所有内容

完成前两步后，以后的更新的推送：git push origin master

克隆远程仓库到本地：git clone git@github.com:shlhhebei/learning-java.git
			注意：要克隆一个仓库，首先必须知道仓库的地址，然后使用git clone命令克隆
			      Git支持多种协议，包括https，但通过ssh支持的原生git协议速度最快
